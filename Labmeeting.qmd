---
title: "A modern pipeline for academic collaboration"
format:
  revealjs: 
    theme: "simple"
    footer: "R. Ligneul - COPHY - 10.10.23"
    embed-resources: true
---

## Rationale

As scientists, we spend a **lot** of time coding and writing.

![](data_analysis/timespent.png){fig-align="center" width="80%"}

Unfortunately, both activities involve repetitive behaviors and suboptimal routines...

------------------------------------------------------------------------

For example, we routinely...

::: incremental
-   Duplicate our documents over and over again
-   Struggle with references and bibliographies
-   Spend hours (days) reformating papers for resubmissions
-   Update manually figures and **statistics**
-   Spend way to much title aligning items on Powerpoint
-   Feel like it is a big effort to put together a few slides or a report to describe our results
-   Have no idea of how we could participate or animate large-scale collaborations ! ü§™
:::

## Time wasted reduces your happiness

And this is particularly true when it comes with collaborating with our peers.

![](data_analysis/figures/happiness.png){fig-align="center" width="60%"}

## What prevents us from collaborating more smoothly?

::: {.incremental style="font-size: 80%;"}
-   Endless multiplication of communication channels (Mattermost üòá)

-   Data and code on local computers

-   Suboptimal coding practices (no virtual envs, no version control, absolute paths)

-   Lack of knowledge regarding others interests, skills and activities

-   Dependence upon Google Docs is increasingly problematic

    -   And Google Docs is not even great

-   Unnecessary differences in software use.

-   ...?
:::

## A (tiny) reason to hope!

![](data_analysis/refManagement.png){fig-align="center" width="80%"}

Most Cophy-makers already use Zotero or are willing to change. Users of Latex will be fine anyways.

## A (bigger) reason to worry?

It seems that Cophy-makers use a **huge** diversity of IDE, and that we are still a minority to use Git-based version control.

![](data_analysis/GitEditor.png){fig-align="center" width="80%"}

PyCharm-Matlab people: who are you, what are your networks?üïµÔ∏è

## Towards a straightforward solution

Correlation does not imply causation, but those who are still not using Git may still need to install Visual Studio Code.

![](data_analysis/figures/crossGitVS.png){fig-align="center" width="60%"}

# Tutorial!

Be reassured: following it won't break your computer, it won't require much space and it is safe.

## Visual Studio Code

[Click here for the main installer](https://code.visualstudio.com/) and then get the next three extension:

-   [Click here to get Live Share](https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare) real-time collaboration tool (great to debug and even write together)

-   [Click here to get a web browser](https://marketplace.visualstudio.com/items?itemName=Phu1237.vs-browser) inside VScode (**we'll use it to follow the rest of this presentation** and more!)

## Wait, how is this going to help with the writing?

Because writing in VS Code is amazing, thanks to the [Markdown](https://www.markdownguide.org/) syntax combined with another **really powerful** tool, **Quarto**.

::: {style="font-size:80%;"}
**Huge** improvement in the accessibility of Markdown thanks to a Word-like editor.

**Amazing** reference management logics (flawless integration with Zotero, Pubmed, Crossref, fromDOI, etc.)

Possibility to write: code, articles, books, websites and.. simple presentations like this.
:::

[Click here](https://quarto.org/docs/get-started/) to get Quarto itself and [here](https://marketplace.visualstudio.com/items?itemName=quarto.quarto) to get the VScode extension.

## Let's have a look at the raw code of this presentation

``` markdown
---
title: "A modern pipeline for academic collaboration"
format:
  revealjs: 
    theme: "simple"
    footer: "R. Ligneul - COPHY - 10.10.23"
    embed-resources: true
---

## Now, let's interact with the visual editor functionalities

To do so, you're going to join me through a Live Share session.

Just click on the Live Share extension




## Rationale

As scientists, we spend a **lot** of time coding and writing.

![](data_analysis/timespent.png){fig-align="center" width="80%"}

Unfortunately, both activities involve repetitive behaviors and suboptimal routines...

------------------------------------------------------------------------

For example, we routinely...

::: incremental
-   Duplicate our documents over and over again
-   Struggle with references and bibliographies
-   Spend hours (days) reformating papers for resubmissions
-   Update manually figures and **statistics**
-   Spend way to much title aligning items on Powerpoint
-   Feel like it is a big effort to put together a few slides or a report to describe our results
-   Have no idea of how we could participate or animate large-scale collaborations ! ü§™
:::

## Time wasted reduces your happiness

And this is particularly true when it comes with collaborating with our peers.

![](data_analysis/figures/happiness.png){fig-align="center" width="60%"}

## What prevents us from collaborating more smoothly?

::: {.incremental style="font-size: 80%;"}
-   Endless multiplication of communication channels (Mattermost üòá)

-   Data and code on local computers

-   Suboptimal coding practices (no virtual envs, no version control, absolute paths)

-   Lack of knowledge regarding others interests, skills and activities

-   Dependence upon Google Docs is increasingly problematic

    -   And Google Docs is not even great

-   Unnecessary differences in software use.

-   ...?
:::

## A (tiny) reason to hope!

![](data_analysis/refManagement.png){fig-align="center" width="80%"}

Most Cophy-makers already use Zotero or are willing to change. Users of Latex will be fine anyways.

## A (bigger) reason to worry?

It seems that Cophy-makers use a **huge** diversity of IDE, and that we are still a minority to use Git-based version control.

![](data_analysis/GitEditor.png){fig-align="center" width="80%"}

PyCharm-Matlab people: who are you, what are your networks?üïµÔ∏è

## Towards a straightforward solution

Correlation does not imply causation, but those who are still not using Git may still need to install Visual Studio Code.

![](data_analysis/figures/crossGitVS.png){fig-align="center" width="60%"}

# Tutorial!

Be reassured: following it won't break your computer, it won't require much space and it is safe.

## Visual Studio Code

[Click here for the main installer](https://code.visualstudio.com/) and then get the next three extension:

-   [Click here to get Live Share](https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare) real-time collaboration tool (great to debug and even write together)

-   [Click here to get a web browser](https://marketplace.visualstudio.com/items?itemName=Phu1237.vs-browser) inside VScode (**we'll use it to follow the rest of this presentation** and more!)

## Wait, how is this going to help with the writing?

Because writing in VS Code is amazing, thanks to the [Markdown](https://www.markdownguide.org/) syntax combined with another **really powerful** tool, **Quarto**.

::: {style="font-size:80%;"}
**Huge** improvement in the accessibility of Markdown thanks to a Word-like editor.

**Amazing** reference management logics (flawless integration with Zotero, Pubmed, Crossref, fromDOI, etc.)

Possibility to write: code, articles, books, websites and.. simple presentations like this.
:::

[Click here](https://quarto.org/docs/get-started/) to get Quarto itself and [here](https://marketplace.visualstudio.com/items?itemName=quarto.quarto) to get the VScode extension.
```

## Bonus - Install Git, Github CLI and GitGraph extension

Now, we'll just need to make sure that everyone has:

-   [Git](https://git-scm.com/)

-   [Github CLI](https://cli.github.com/) (optional but useful if you have a Github account)

-   [GitGraph](https://marketplace.visualstudio.com/items?itemName=mhutchie.git-graph) (to help dealing with messy Git)

Once it's done, just close and restart.

## Bonus - SSH over VS code

Since we are on the CRNL network, we can easily connect to the cluster using SSH in VScode.

[Click here to get SSH for VS code](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack) capability (connect **directly** to the cluster, or any server, via SSH!)

Then, just click the bottom left button of VS code

![](images/sshButton.png){fig-align="center" width="40%"}

Choose "Connect to host" and enter:

`ssh prenom.nom@10.69.168.62`

Then enter your CRNL credentials (same as those which get you in the wiki!)

## Bonus - Check /crnldata/cophy/Tutorials

It will be progressively populated with use cases of Quarto.

It already explains how to use Quarto and Jupyter on the cluster.

## Bonus - More VScode extensions

The list of good extensions is endless. For example, you have:

-   Prettifiers that will make your code look much better in any language
-   Snippets and refactoring plugins that will help autocomplete and optimize you code in any language.
-   Tools to preview anything you can imagine
-   Options to connect easily to databases, cloud providers, AI services, etc.
-   Widgets like Pomodoro, Grammarly

## But now, let's interact live with Quarto

![](images/paste-4.png){width="38"}

Find this icon on your left sidebar, click "join" and copy-paste the following link: